/**
@mainpage HKUST Robotics Team Library

@section About

Experimental hardware abstraction layer for STM32F103 and STM32F407 devices, based on
<a href="https://github.com/libopencm3/libopencm3">libopencm3</a>.

@section Prerequisites
You will be needing the following to compile:

- <a href="https://developer.arm.com/open-source/gnu-toolchain/gnu-rm">arm-none-eabi-gcc</a> (Or your preferred
compiler, in that case provide your own toolchain file)
- <a href="https://cmake.org/">CMake</a>
- <a href="https://www.gnu.org/software/make/">GNU Make</a>
- <a href="https://www.gnu.org/software/gawk/">GNU awk</a>

Optional software that will make your life easier:
- <a href="https://git-scm.com/">Git</a>
- <a href="https://www.jetbrains.com/clion/">Jetbrains CLion</a>
- One of the following flashing tools:
    - <a href="https://www.segger.com/products/debug-probes/j-link/technology/flash-download/">JLink</a>
    - <a href="https://github.com/texane/stlink">stlink</a>
    - <a href="https://sourceforge.net/p/stm32flash/wiki/Home/">stm32flash</a>

@section Usage

1. Add the library files to your project by adding it as a submodule to your project:
    \code{.sh}
    git submodule add git://github.com/waicool20/RTLib
    \endcode
2. Initialize all the submodule dependencies
    \code{.sh}
    git submodule update --init --recursive
    \endcode
3. Make LibOpenCM3
    \code{.sh}
    cd RTLib/libopencm3
    make
    \endcode
4. Modify your `CMakeLists.txt`
    You need to let your compiler know about `libopencm3` and `RTLib`, checkout the `CMakeLists.txt` for an example on
    how to write yours!
5. Building your program
    \code{.sh}
    cd RTLib                        # Switch to the RTLib root directory first if you aren't already
    mkdir build && cd build         # Then create a build directory where all the generate build files will be output

    # Change the -G option according to your build system, might be different for example if you were using MINGW
    cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../cmake/arm-toolchain.cmake -G "CodeBlocks - Unix Makefiles" ../

    # Finally run the make command to initate the build process
    cmake --build .
    \endcode

A `.bin` file and `.elf` file will be generated inside the `build` directory

If you are using CLion, then usually the `Build All` configuration is all you need to build the project and you skip
all that terminal rubbish.

@subsection Testing Testing on a Device

You should have either an ST-Link, USB-TTL, or JLink for your device. Check your mainboard if you are unsure.

All following code assumes your current working directory is at the root of the project.

@subsubsection ST-Link

\code{.sh}
cd scripts/
./flash_stlink.sh ../build/[target].bin  # Replace target.bin with the appropriate file
\endcode

@subsubsection JLink

\code{.sh}
cd scripts/
./flash.sh <device> ./jlink/[debug|release].jlink  # Replace [debug|release] with the file you want to flash
\endcode

@subsubsection USB-TTL

\code{.sh}
cd build/

# Replace:
# [target.bin] with the appropriate file
# [115200] with the target baud rate
# [/dev/ttyUSB0] with the target device
sudo stm32flash -w [target.bin] -v -g 0x0 -b [115200] [/dev/ttyUSB0]
\endcode

Note: Please turn your device into BOOT mode when flashing via USB-TTL.

@subsection Updating Updating RTLib

\code{.sh}
cd RTLib                        # Switch to the RTLib root directory first if you aren't already
git pull origin master          # Pull the latest upstream commits
cd ..                           # Go back to your project directory
git status                      # Check that there are changes to RTLib
git add RTLib                   # Add the RTLib directory to the change list
git commit                      # Commit the update
\endcode

@section Contributors

- <b>David Mak</b> - <a href="https://github.com/Derppening/">Derppening</a>
- <b>waicool20</b> - <a href="https://github.com/waicool20">waicool20</a>

@section License

This project is licensed under LGPLv3 - see COPYING and COPYING.LESSER for details.

<a href="https://github.com/libopencm3/libopencm3">libopencm3</a> is licensed under
<a href="https://github.com/libopencm3/libopencm3/blob/master/COPYING.LGPL3">LGPLv3</a>.
*/
